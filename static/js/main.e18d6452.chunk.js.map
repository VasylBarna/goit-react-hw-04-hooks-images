{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.scss","components/Modal/Modal.module.scss","components/Button/Button.module.scss","components/Container/Container.module.scss","components/ImageGallery/ImageGallery.module.scss","components/Searchbar/Searchbar.module.scss","components/Container/Container.js","components/Searchbar/Searchbar.js","services/api.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Modal/Modal.js","components/Button/Button.js","components/Loader/Loader.js","components/ImageGallery/ImageGallery.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Searchbar","onSubmit","useState","imageName","setImageName","searchbar","searchForm","event","preventDefault","trim","alert","type","button","label","input","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","ApiService","this","query","pageNumber","perPage","a","fetch","response","json","parsedResponse","incrementPage","ImageGalleryItem","id","url","tags","largeImage","toggleModal","handleLargeImage","imageGallery","onClick","image","src","alt","propeType","PropTypes","string","isRequired","func","modalRoot","document","querySelector","Modal","onClose","useEffect","handleKeydown","code","window","addEventListener","removeEventListener","createPortal","overlay","target","modal","Button","Spinner","color","height","width","timeout","Component","apiService","ImageGallery","images","setImages","showModal","setShowModal","setLargeImage","loading","setLoading","getImages","scrollTo","top","documentElement","scrollHeight","behavior","prevState","fetchImages","then","hits","catch","error","console","log","finally","map","webformatURL","largeImageURL","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e18d6452.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ImageGalleryItem_image__39yBB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__ozS5R\",\"modal\":\"Modal_modal__2cRze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Button_container__32yqD\",\"button\":\"Button_button__2eJao\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__5OlK6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__3PYGo\",\"imageGalleryItem\":\"ImageGallery_imageGalleryItem__3sJ8S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__2Ixyh\",\"searchForm\":\"Searchbar_searchForm__2Wi2g\",\"button\":\"Searchbar_button__3_fhF\",\"label\":\"Searchbar_label__2g7SV\",\"input\":\"Searchbar_input__1ErjK\"};","import PropTypes from 'prop-types';\nimport styles from './Container.module.scss';\n\nconst Container = ({ children }) => {\n  return <div className={styles.container}>{children}</div>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Searchbar.module.scss';\n\nexport default function Searchbar({ onSubmit }) {\n  const [imageName, setImageName] = useState('');\n\n  const handleChange = event => {\n    setImageName(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (imageName.trim() === '') {\n      alert('Введите точное название');\n      return;\n    }\n    onSubmit(imageName);\n    setImageName('');\n  };\n\n  return (\n    <header className={styles.searchbar}>\n      <form className={styles.searchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles.button}>\n          <span className={styles.label}>Search</span>\n        </button>\n        <input\n          className={styles.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={imageName}\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  imageName: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://pixabay.com';\nconst API_KEY = '21930090-2f4bfee534669e28d6350f360';\n\nexport default class ApiService {\n  constructor() {\n    this.query = '';\n    this.pageNumber = 1;\n    this.perPage = 12;\n  }\n\n  async fetchImages() {\n    const response = await fetch(\n      `${BASE_URL}/api/?image_type=photo&orientation=horizontal&q=${this.query}&page=${this.pageNumber}&per_page=${this.perPage}&key=${API_KEY}`,\n    );\n    const parsedResponse = await response.json();\n    this.incrementPage();\n    return parsedResponse;\n  }\n  incrementPage() {\n    this.pageNumber += 1;\n  }\n  resetPage() {\n    this.pageNumber = 1;\n  }\n}\n","import PropTypes from 'prop-types';\nimport styles from './ImageGalleryItem.module.scss';\n\nconst ImageGalleryItem = ({\n  id,\n  url,\n  tags,\n  largeImage,\n  toggleModal,\n  handleLargeImage,\n}) => {\n  const handleOpenModal = () => {\n    toggleModal();\n    handleLargeImage(largeImage);\n  };\n\n  return (\n    <li\n      className={styles.imageGallery}\n      key={id}\n      onClick={() => handleOpenModal()}\n    >\n      <img className={styles.image} src={url} alt={tags} />\n    </li>\n  );\n};\n\nImageGalleryItem.propeType = {\n  id: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  largeImage: PropTypes.string.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  handleLargeImage: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styles from './Modal.module.scss';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, children }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeydown);\n\n    function handleKeydown(event) {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    }\n    return () => window.removeEventListener('keydown', handleKeydown);\n  }, [onClose]);\n\n  const handleClickBackdrop = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={styles.overlay} onClick={handleClickBackdrop}>\n      <div className={styles.modal}>{children}</div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport styles from './Button.module.scss';\n\nconst Button = ({ onClick }) => {\n  return (\n    <div className={styles.container}>\n      <button className={styles.button} type=\"button\" onClick={onClick}>\n        Load more...\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nclass Spinner extends Component {\n  render() {\n    return (\n      <Loader\n        type=\"Bars\"\n        color=\"#FF8C00\"\n        height={300}\n        width={300}\n        timeout={2000}\n      />\n    );\n  }\n}\n\nexport default Spinner;\n","import { useState, useEffect } from 'react';\nimport ApiService from '../../services/api';\nimport PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport Modal from '../Modal';\nimport Button from '../Button';\nimport styles from './ImageGallery.module.scss';\nimport Spinner from '../Loader';\n\nconst apiService = new ApiService();\n\nexport default function ImageGallery({ imageName }) {\n  const [images, setImages] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [largeImage, setLargeImage] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (imageName === '') return;\n    setImages([]);\n    apiService.query = imageName;\n    setLoading(true);\n    getImages();\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }, [imageName]);\n\n  const toggleModal = () => {\n    setShowModal(prevState => !prevState);\n  };\n\n  const handleLargeImage = image => {\n    setLargeImage(image);\n  };\n\n  const handleBtnClick = () => {\n    getImages();\n  };\n\n  const getImages = () => {\n    setLoading(true);\n\n    apiService\n      .fetchImages()\n      .then(({ hits }) => setImages(prevState => [...prevState, ...hits]))\n      .catch(error => console.log(error))\n      .finally(setLoading(false));\n  };\n\n  return (\n    <>\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <img src={largeImage} alt=\"images\" />\n        </Modal>\n      )}\n\n      <ul className={styles.imageGallery}>\n        {images.map(({ id, webformatURL, tags, largeImageURL }) => {\n          return (\n            <ImageGalleryItem\n              key={id}\n              url={webformatURL}\n              tags={tags}\n              largeImage={largeImageURL}\n              toggleModal={toggleModal}\n              handleLargeImage={handleLargeImage}\n            />\n          );\n        })}\n      </ul>\n      {images.length > 0 && !loading && <Button onClick={handleBtnClick} />}\n      {loading && <Spinner />}\n    </>\n  );\n}\n\nImageGallery.propTypes = {\n  imageName: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\nimport Container from './components/Container';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\nexport default function App() {\n  const [imageName, setImageName] = useState('');\n\n  const handleFormSubmit = imageName => {\n    setImageName(imageName);\n  };\n\n  return (\n    <Container>\n      <Searchbar onSubmit={handleFormSubmit} />\n      <ImageGallery imageName={imageName} />\n    </Container>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}